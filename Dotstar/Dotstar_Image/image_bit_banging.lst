Sections:
00: "org0001:200" (200-2BE)
01: "org0002:2000" (2000-20C2)


Source: "image_bit_banging.asm"
                        	     1: ; image_bit_banging.asm
                        	     2: ; program to do SPI input to dotstar LED BGR displays with software bit-banging on KIM-1, single image
                        	     3: ; possible issue: not enough delay in clk
                        	     4: .cpu 6502
                        	     5: 
                        	     6: .equ outputKIM, 0x1700 ; variable for address of SPI pins, bit 7 is MOSI, bit 6 is SCLK
                        	     7: .equ outputSettings, 0x1701 ; variable for address of output settings, where we can set pins to inputs or outputs
                        	     8: 
                        	     9: .equ output, 0x1000 ; variable for address of output (for byte_send)
                        	    10: 
                        	    11: .equ globalByte, 0x1001 ; variable for address of first byte sent (for led_send)
                        	    12: .equ blueByte, 0x1002 ; variable for address of second byte sent (for led_send)
                        	    13: .equ greenByte, 0x1003 ; variable for address of third byte sent (for led_send)
                        	    14: .equ redByte, 0x1004 ; variable for address of fourth byte sent (for led_send)
                        	    15: 
                        	    16: .org 0x0200 ; start main at $0200
                        	    17: 
                        	    18: main:
                        	    19: 
                        	    20:     ; setup
00:0200 208602          	    21:     JSR setup
                        	    22: 
                        	    23:     begin:
                        	    24:     ; send start frame
00:0203 209A02          	    25:     JSR start_frame
                        	    26: 
                        	    27:     ; load Y register
00:0206 A000            	    28:     LDY #0x00
                        	    29: 
                        	    30:     ; load the intensity value for RGBs
                        	    31:     ;LDA #0b11100000
00:0208 AD0020          	    32:     LDA intensity
00:020B 8D0110          	    33:     STA globalByte
                        	    34: 
                        	    35:     send_data: ; send LED data, up to 256 bytes for each spec bc 3*256 rgb values
                        	    36:         
00:020E B90220          	    37:         LDA blueData,Y
00:0211 8D0210          	    38:         STA blueByte
                        	    39: 
00:0214 B94220          	    40:         LDA greenData,Y
00:0217 8D0310          	    41:         STA greenByte
                        	    42: 
00:021A B98220          	    43:         LDA redData,Y
00:021D 8D0410          	    44:         STA redByte
                        	    45: 
00:0220 206102          	    46:         JSR led_send
                        	    47: 
00:0223 CC0120          	    48:         CPY numLEDs
                        	    49: 
00:0226 C8              	    50:         INY
                        	    51:         
00:0227 D0E5            	    52:         BNE send_data ; branch if numLEDs not reached
                        	    53: 
                        	    54:     ; send end frame
00:0229 20AC02          	    55:     JSR end_frame
                        	    56: 
                        	    57:     ; JMP begin ; comment out if you don't want loop
                        	    58:     
00:022C 00              	    59:     BRK ; break
                        	    60: 
                        	    61: byte_send: ; subroutine to send 8 bits
                        	    62: 
                        	    63:     set_clk_low: ; set the clock low before getting data in pin 7
00:022D AD0017          	    64:         LDA outputKIM
00:0230 29BF            	    65:         AND #0b10111111   ; Pull CLK (bit 6) low
00:0232 8D0017          	    66:         STA outputKIM
                        	    67:     
                        	    68:     set_counter: ; counter to see how many bits have been sent of byte
00:0235 A208            	    69:         LDX #0x08
                        	    70:         
                        	    71:     send_output: ; send byte of data
                        	    72:         
                        	    73:         ; store output bit in outputKIM bit 7
00:0237 AD0010          	    74:         LDA output ; load output into accumulator
00:023A 2980            	    75:         AND #0b10000000 ; AND output so only last bit is recognized
00:023C 0D0017          	    76:         ORA outputKIM ; OR output to what's in 0x1700, nothing is changed except last bit
00:023F 8D0017          	    77:         STA outputKIM ; store result in KIM output bit
                        	    78:         
                        	    79:     
                        	    80:     clk_cycle: ; simulate a clock cycle that occurs
                        	    81:                ; data has to be stable before clock rising edge
                        	    82:         
00:0242 AD0017          	    83:         LDA outputKIM ;load outputKIM into memory
00:0245 4940            	    84:         EOR #0b01000000 ; Invert SCLK (bit 6)
00:0247 8D0017          	    85:         STA outputKIM ; Store into outputKIM
                        	    86: 
00:024A 0E0010          	    87:         ASL output ; arithmetic shift left of output1 to move next output1 bit to bit 0
                        	    88:         
00:024D AD0017          	    89:         LDA outputKIM ; load outputKIM
00:0250 4940            	    90:         EOR #0b01000000 ; Invert SCLK (bit 6)
00:0252 8D0017          	    91:         STA outputKIM ; Store into outputKIM
                        	    92:         
00:0255 AD0017          	    93:         LDA outputKIM ; set final digit of outputKIM to 0 so it is modified correctly on next edge
00:0258 297F            	    94:         AND #0b01111111
00:025A 8D0017          	    95:         STA outputKIM
                        	    96:         
00:025D CA              	    97:         DEX ; decrement number of bits remaining to be sent
                        	    98:         
00:025E D0D7            	    99:         BNE send_output ; jump to send_output for next bit
                        	   100:         
00:0260 60              	   101:     RTS ; end subroutine
                        	   102: 
                        	   103: 
                        	   104: led_send: ; subroutine to send 4 bytes for individual LED frame
                        	   105:     
                        	   106:     ; send 3 bits + global byte
                        	   107:     send_global:
00:0261 AD0110          	   108:         LDA globalByte
00:0264 8D0010          	   109:         STA output
00:0267 202D02          	   110:         JSR byte_send
                        	   111:     
                        	   112:     ; send blue data byte
                        	   113:     send_blue:
00:026A AD0210          	   114:         LDA blueByte
00:026D 8D0010          	   115:         STA output
00:0270 202D02          	   116:         JSR byte_send
                        	   117:     
                        	   118:     ; send green data byte
                        	   119:     send_green:
00:0273 AD0310          	   120:         LDA greenByte
00:0276 8D0010          	   121:         STA output
00:0279 202D02          	   122:         JSR byte_send
                        	   123:     
                        	   124:     ; send red data byte
                        	   125:     send_red:
00:027C AD0410          	   126:         LDA redByte
00:027F 8D0010          	   127:         STA output
00:0282 202D02          	   128:         JSR byte_send
                        	   129:         
00:0285 60              	   130:     RTS ; end subroutine
                        	   131:     
                        	   132: setup: ; setup subroutine
                        	   133: 
                        	   134:     clear_decimal_mode:
00:0286 D8              	   135:         CLD
                        	   136:     
                        	   137:     set_initial_output_state: ; set outputKIM to 0x00
00:0287 A900            	   138:         LDA #0x00
00:0289 8D0017          	   139:         STA outputKIM
                        	   140:     
                        	   141:     make_output: ; make port A an output
00:028C A9FF            	   142:         LDA #0xFF
00:028E 8D0117          	   143:         STA outputSettings
                        	   144:     
                        	   145:     set_low: ; Pull CLK pin to low by AND with outputKIM and storing it back
00:0291 AD0017          	   146:             LDA outputKIM
00:0294 29BF            	   147:             AND #0b10111111  ; Pull CLK (bit 6) low
00:0296 8D0017          	   148:             STA outputKIM
                        	   149:             
00:0299 60              	   150:     RTS
                        	   151: 
                        	   152: start_frame: ; send start frame (0's in every position)
                        	   153: 
00:029A A900            	   154:     LDA #0x00
00:029C 8D0110          	   155:     STA globalByte
00:029F 8D0210          	   156:     STA blueByte
00:02A2 8D0310          	   157:     STA greenByte
00:02A5 8D0410          	   158:     STA redByte
                        	   159: 
00:02A8 206102          	   160:     JSR led_send
                        	   161:     
00:02AB 60              	   162:     RTS ; end subroutine
                        	   163: 
                        	   164: end_frame: ; send end frame (1's in every position)
                        	   165: 
00:02AC A9FF            	   166:     LDA #0xFF
00:02AE 8D0110          	   167:     STA globalByte
00:02B1 8D0210          	   168:     STA blueByte
00:02B4 8D0310          	   169:     STA greenByte
00:02B7 8D0410          	   170:     STA redByte
                        	   171: 
00:02BA 206102          	   172:     JSR led_send
                        	   173:     
00:02BD 60              	   174:     RTS ; end subroutine
                        	   175: 
                        	   176: 
                        	   177: ; send image data
                        	   178: ; intensity: how bright RGBs are
                        	   179: ; numLEDs: total number of LEDs
                        	   180: ; blueData: label with up to 256 bytes for blue data
                        	   181: ; greenData: label with up to 256 bytes for green data
                        	   182: ; redData: label with up to 256 bytes for red data
                        	   183: .org 0x2000
                        	   184: 
                        	   185: .include "image.txt"

Source: "image.txt"
01:2000 E1              	     1: intensity: .byte 0xe1
                        	     2: 
01:2001 3F              	     3: numLEDs: .byte 0x3f
                        	     4: 
                        	     5: 
                        	     6: 
                        	     7: blueData:
01:2002 FF              	     8: .byte 0xff
01:2003 FF              	     9: .byte 0xff
01:2004 00              	    10: .byte 0x0
01:2005 FF              	    11: .byte 0xff
01:2006 FF              	    12: .byte 0xff
01:2007 00              	    13: .byte 0x0
01:2008 FF              	    14: .byte 0xff
01:2009 FF              	    15: .byte 0xff
01:200A 00              	    16: .byte 0x0
01:200B 11              	    17: .byte 0x11
01:200C 00              	    18: .byte 0x0
01:200D 00              	    19: .byte 0x0
01:200E 00              	    20: .byte 0x0
01:200F 00              	    21: .byte 0x0
01:2010 11              	    22: .byte 0x11
01:2011 00              	    23: .byte 0x0
01:2012 00              	    24: .byte 0x0
01:2013 11              	    25: .byte 0x11
01:2014 00              	    26: .byte 0x0
01:2015 00              	    27: .byte 0x0
01:2016 00              	    28: .byte 0x0
01:2017 00              	    29: .byte 0x0
01:2018 11              	    30: .byte 0x11
01:2019 00              	    31: .byte 0x0
01:201A FF              	    32: .byte 0xff
01:201B 00              	    33: .byte 0x0
01:201C 11              	    34: .byte 0x11
01:201D 11              	    35: .byte 0x11
01:201E 11              	    36: .byte 0x11
01:201F 11              	    37: .byte 0x11
01:2020 00              	    38: .byte 0x0
01:2021 FF              	    39: .byte 0xff
01:2022 00              	    40: .byte 0x0
01:2023 00              	    41: .byte 0x0
01:2024 00              	    42: .byte 0x0
01:2025 00              	    43: .byte 0x0
01:2026 00              	    44: .byte 0x0
01:2027 00              	    45: .byte 0x0
01:2028 00              	    46: .byte 0x0
01:2029 00              	    47: .byte 0x0
01:202A FF              	    48: .byte 0xff
01:202B 00              	    49: .byte 0x0
01:202C 00              	    50: .byte 0x0
01:202D 11              	    51: .byte 0x11
01:202E 11              	    52: .byte 0x11
01:202F 00              	    53: .byte 0x0
01:2030 00              	    54: .byte 0x0
01:2031 FF              	    55: .byte 0xff
01:2032 00              	    56: .byte 0x0
01:2033 00              	    57: .byte 0x0
01:2034 00              	    58: .byte 0x0
01:2035 11              	    59: .byte 0x11
01:2036 11              	    60: .byte 0x11
01:2037 00              	    61: .byte 0x0
01:2038 00              	    62: .byte 0x0
01:2039 00              	    63: .byte 0x0
01:203A FF              	    64: .byte 0xff
01:203B 00              	    65: .byte 0x0
01:203C 00              	    66: .byte 0x0
01:203D FF              	    67: .byte 0xff
01:203E FF              	    68: .byte 0xff
01:203F 00              	    69: .byte 0x0
01:2040 00              	    70: .byte 0x0
01:2041 FF              	    71: .byte 0xff
                        	    72: 
                        	    73: 
                        	    74: greenData:
01:2042 FF              	    75: .byte 0xff
01:2043 FF              	    76: .byte 0xff
01:2044 00              	    77: .byte 0x0
01:2045 FF              	    78: .byte 0xff
01:2046 FF              	    79: .byte 0xff
01:2047 00              	    80: .byte 0x0
01:2048 FF              	    81: .byte 0xff
01:2049 FF              	    82: .byte 0xff
01:204A 00              	    83: .byte 0x0
01:204B D2              	    84: .byte 0xd2
01:204C 00              	    85: .byte 0x0
01:204D 00              	    86: .byte 0x0
01:204E 00              	    87: .byte 0x0
01:204F 00              	    88: .byte 0x0
01:2050 D2              	    89: .byte 0xd2
01:2051 00              	    90: .byte 0x0
01:2052 00              	    91: .byte 0x0
01:2053 D2              	    92: .byte 0xd2
01:2054 00              	    93: .byte 0x0
01:2055 00              	    94: .byte 0x0
01:2056 00              	    95: .byte 0x0
01:2057 00              	    96: .byte 0x0
01:2058 D2              	    97: .byte 0xd2
01:2059 00              	    98: .byte 0x0
01:205A FF              	    99: .byte 0xff
01:205B 00              	   100: .byte 0x0
01:205C D2              	   101: .byte 0xd2
01:205D D2              	   102: .byte 0xd2
01:205E D2              	   103: .byte 0xd2
01:205F D2              	   104: .byte 0xd2
01:2060 00              	   105: .byte 0x0
01:2061 FF              	   106: .byte 0xff
01:2062 00              	   107: .byte 0x0
01:2063 00              	   108: .byte 0x0
01:2064 00              	   109: .byte 0x0
01:2065 00              	   110: .byte 0x0
01:2066 00              	   111: .byte 0x0
01:2067 00              	   112: .byte 0x0
01:2068 00              	   113: .byte 0x0
01:2069 00              	   114: .byte 0x0
01:206A FF              	   115: .byte 0xff
01:206B 00              	   116: .byte 0x0
01:206C 00              	   117: .byte 0x0
01:206D D2              	   118: .byte 0xd2
01:206E D2              	   119: .byte 0xd2
01:206F 00              	   120: .byte 0x0
01:2070 00              	   121: .byte 0x0
01:2071 FF              	   122: .byte 0xff
01:2072 00              	   123: .byte 0x0
01:2073 00              	   124: .byte 0x0
01:2074 DD              	   125: .byte 0xdd
01:2075 D2              	   126: .byte 0xd2
01:2076 D2              	   127: .byte 0xd2
01:2077 DD              	   128: .byte 0xdd
01:2078 00              	   129: .byte 0x0
01:2079 00              	   130: .byte 0x0
01:207A FF              	   131: .byte 0xff
01:207B 00              	   132: .byte 0x0
01:207C 00              	   133: .byte 0x0
01:207D FF              	   134: .byte 0xff
01:207E FF              	   135: .byte 0xff
01:207F 00              	   136: .byte 0x0
01:2080 00              	   137: .byte 0x0
01:2081 FF              	   138: .byte 0xff
                        	   139: 
                        	   140: 
                        	   141: redData:
01:2082 FF              	   142: .byte 0xff
01:2083 FF              	   143: .byte 0xff
01:2084 00              	   144: .byte 0x0
01:2085 FF              	   145: .byte 0xff
01:2086 FF              	   146: .byte 0xff
01:2087 00              	   147: .byte 0x0
01:2088 FF              	   148: .byte 0xff
01:2089 FF              	   149: .byte 0xff
01:208A 00              	   150: .byte 0x0
01:208B B4              	   151: .byte 0xb4
01:208C 00              	   152: .byte 0x0
01:208D 00              	   153: .byte 0x0
01:208E 00              	   154: .byte 0x0
01:208F 00              	   155: .byte 0x0
01:2090 B4              	   156: .byte 0xb4
01:2091 00              	   157: .byte 0x0
01:2092 00              	   158: .byte 0x0
01:2093 B4              	   159: .byte 0xb4
01:2094 00              	   160: .byte 0x0
01:2095 00              	   161: .byte 0x0
01:2096 00              	   162: .byte 0x0
01:2097 00              	   163: .byte 0x0
01:2098 B4              	   164: .byte 0xb4
01:2099 00              	   165: .byte 0x0
01:209A FF              	   166: .byte 0xff
01:209B 00              	   167: .byte 0x0
01:209C B4              	   168: .byte 0xb4
01:209D B4              	   169: .byte 0xb4
01:209E B4              	   170: .byte 0xb4
01:209F B4              	   171: .byte 0xb4
01:20A0 00              	   172: .byte 0x0
01:20A1 FF              	   173: .byte 0xff
01:20A2 00              	   174: .byte 0x0
01:20A3 00              	   175: .byte 0x0
01:20A4 00              	   176: .byte 0x0
01:20A5 00              	   177: .byte 0x0
01:20A6 00              	   178: .byte 0x0
01:20A7 00              	   179: .byte 0x0
01:20A8 00              	   180: .byte 0x0
01:20A9 00              	   181: .byte 0x0
01:20AA FF              	   182: .byte 0xff
01:20AB 00              	   183: .byte 0x0
01:20AC 00              	   184: .byte 0x0
01:20AD B4              	   185: .byte 0xb4
01:20AE B4              	   186: .byte 0xb4
01:20AF 00              	   187: .byte 0x0
01:20B0 00              	   188: .byte 0x0
01:20B1 FF              	   189: .byte 0xff
01:20B2 00              	   190: .byte 0x0
01:20B3 00              	   191: .byte 0x0
01:20B4 FE              	   192: .byte 0xfe
01:20B5 B4              	   193: .byte 0xb4
01:20B6 B4              	   194: .byte 0xb4
01:20B7 FE              	   195: .byte 0xfe
01:20B8 00              	   196: .byte 0x0
01:20B9 00              	   197: .byte 0x0
01:20BA FF              	   198: .byte 0xff
01:20BB 00              	   199: .byte 0x0
01:20BC 00              	   200: .byte 0x0
01:20BD FF              	   201: .byte 0xff
01:20BE FF              	   202: .byte 0xff
01:20BF 00              	   203: .byte 0x0
01:20C0 00              	   204: .byte 0x0
01:20C1 FF              	   205: .byte 0xff
                        	   206: 


Symbols by name:
begin                            A:0203
blueByte                         S:1002
blueData                         A:2002
byte_send                        A:022D
clear_decimal_mode               A:0286
clk_cycle                        A:0242
end_frame                        A:02AC
globalByte                       S:1001
greenByte                        S:1003
greenData                        A:2042
intensity                        A:2000
led_send                         A:0261
main                             A:0200
make_output                      A:028C
numLEDs                          A:2001
output                           S:1000
outputKIM                        S:1700
outputSettings                   S:1701
redByte                          S:1004
redData                          A:2082
send_blue                        A:026A
send_data                        A:020E
send_global                      A:0261
send_green                       A:0273
send_output                      A:0237
send_red                         A:027C
set_clk_low                      A:022D
set_counter                      A:0235
set_initial_output_state         A:0287
set_low                          A:0291
setup                            A:0286
start_frame                      A:029A

Symbols by value:
0200 main
0203 begin
020E send_data
022D byte_send
022D set_clk_low
0235 set_counter
0237 send_output
0242 clk_cycle
0261 send_global
0261 led_send
026A send_blue
0273 send_green
027C send_red
0286 clear_decimal_mode
0286 setup
0287 set_initial_output_state
028C make_output
0291 set_low
029A start_frame
02AC end_frame
1000 output
1001 globalByte
1002 blueByte
1003 greenByte
1004 redByte
1700 outputKIM
1701 outputSettings
2000 intensity
2001 numLEDs
2002 blueData
2042 greenData
2082 redData
